{"ast":null,"code":"var _jsxFileName = \"D:\\\\programm\\\\programm\\\\react_map_edu\\\\work_to_susu\\\\src\\\\Map1.js\";\nimport React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport './Map.css';\nimport customMarkerIcon from './customMarkerIcon.png'; // Путь к вашей кастомной иконке маркера\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleZoomEnd = () => {\n      // Обновляем размер Popup при изменении масштаба карты\n      const zoomLevel = this.mapRef.current.getZoom();\n      const popupWidth = 200 / zoomLevel; // Пропорционально изменяем ширину Popup\n      const popupHeight = 200 / zoomLevel; // Пропорционально изменяем высоту Popup\n      this.setState({\n        popupWidth,\n        popupHeight\n      });\n    };\n    this.toggleSidebar = () => {\n      this.setState(prevState => ({\n        sidebarVisible: !prevState.sidebarVisible\n      }));\n    };\n    this.state = {\n      lat: 60.9394,\n      lng: 76.5731,\n      zoom: 13,\n      routeNumber: null,\n      routeData: [],\n      popupWidth: 200,\n      // Начальная ширина Popup\n      popupHeight: 200,\n      // Начальная высота Popup\n      sidebarVisible: false // состояние видимости боковой панели\n    };\n    this.mapRef = /*#__PURE__*/React.createRef();\n  }\n  componentDidMount() {\n    this.mapRef.current.on(\"zoomend\", this.handleZoomEnd); // Добавляем обработчик события zoomend\n  }\n  componentWillUnmount() {\n    this.mapRef.current.off(\"zoomend\", this.handleZoomEnd); // Удаляем обработчик события zoomend при размонтировании компонента\n  }\n  render() {\n    const center = [this.state.lat, this.state.lng];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sidebar ${this.state.sidebarVisible ? 'visible' : ''}`,\n        children: this.state.sidebarVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u042D\\u0442\\u043E \\u0431\\u043E\\u043A\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        zoom: this.state.zoom,\n        center: center,\n        zoomControl: false,\n        ref: this.mapRef // Ссылка на компонент карты\n        ,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [60.9394, 76.5731],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            minWidth: this.state.popupWidth,\n            maxHeight: this.state.popupHeight,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: customMarkerIcon,\n              alt: \"Custom Marker\",\n              style: {\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sidebar-toggle-btn\",\n        onClick: this.toggleSidebar,\n        style: {\n          left: this.state.sidebarVisible ? '210px' : '10px'\n        } // Перемещаем кнопку в зависимости от состояния боковой панели\n        ,\n        children: this.state.sidebarVisible ? '<' : '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default MapComponent;","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","customMarkerIcon","jsxDEV","_jsxDEV","MapComponent","Component","constructor","props","handleZoomEnd","zoomLevel","mapRef","current","getZoom","popupWidth","popupHeight","setState","toggleSidebar","prevState","sidebarVisible","state","lat","lng","zoom","routeNumber","routeData","createRef","componentDidMount","on","componentWillUnmount","off","render","center","className","children","fileName","_jsxFileName","lineNumber","columnNumber","zoomControl","ref","attribution","url","position","minWidth","maxHeight","src","alt","style","width","onClick","left"],"sources":["D:/programm/programm/react_map_edu/work_to_susu/src/Map1.js"],"sourcesContent":["import React from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport './Map.css';\r\nimport customMarkerIcon from './customMarkerIcon.png'; // Путь к вашей кастомной иконке маркера\r\n\r\nclass MapComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lat: 60.9394,\r\n      lng: 76.5731,\r\n      zoom: 13,\r\n      routeNumber: null,\r\n      routeData: [],\r\n      popupWidth: 200, // Начальная ширина Popup\r\n      popupHeight: 200, // Начальная высота Popup\r\n      sidebarVisible: false, // состояние видимости боковой панели\r\n    };\r\n    this.mapRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mapRef.current.on(\"zoomend\", this.handleZoomEnd); // Добавляем обработчик события zoomend\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mapRef.current.off(\"zoomend\", this.handleZoomEnd); // Удаляем обработчик события zoomend при размонтировании компонента\r\n  }\r\n\r\n  handleZoomEnd = () => {\r\n    // Обновляем размер Popup при изменении масштаба карты\r\n    const zoomLevel = this.mapRef.current.getZoom();\r\n    const popupWidth = 200 / zoomLevel; // Пропорционально изменяем ширину Popup\r\n    const popupHeight = 200 / zoomLevel; // Пропорционально изменяем высоту Popup\r\n    this.setState({ popupWidth, popupHeight });\r\n  };\r\n\r\n  toggleSidebar = () => {\r\n    this.setState((prevState) => ({\r\n      sidebarVisible: !prevState.sidebarVisible,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const center = [this.state.lat, this.state.lng];\r\n\r\n    return (\r\n      <div className=\"map-container\">\r\n        {/* Боковая панель */}\r\n        <div className={`sidebar ${this.state.sidebarVisible ? 'visible' : ''}`}>\r\n          {/* Содержимое боковой панели */}\r\n          {this.state.sidebarVisible && (\r\n            <div>\r\n              {/* Содержимое боковой панели */}\r\n              <p>Это боковая панель</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Карта */}\r\n        <MapContainer\r\n          zoom={this.state.zoom}\r\n          center={center}\r\n          zoomControl={false}\r\n          ref={this.mapRef} // Ссылка на компонент карты\r\n        >\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n\r\n          {/* Добавляем маркер с всплывающим окном (Popup) */}\r\n          <Marker position={[60.9394, 76.5731]}>\r\n            <Popup minWidth={this.state.popupWidth} maxHeight={this.state.popupHeight}>\r\n              {/* Вставляем вашу кастомную иконку */}\r\n              <img src={customMarkerIcon} alt=\"Custom Marker\" style={{ width: \"100%\" }} />\r\n            </Popup>\r\n          </Marker>\r\n        </MapContainer>\r\n\r\n        {/* Кнопка для открытия/закрытия боковой панели */}\r\n        <button\r\n          className=\"sidebar-toggle-btn\"\r\n          onClick={this.toggleSidebar}\r\n          style={{ left: this.state.sidebarVisible ? '210px' : '10px' }} // Перемещаем кнопку в зависимости от состояния боковой панели\r\n        >\r\n          {this.state.sidebarVisible ? '<' : '>'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}