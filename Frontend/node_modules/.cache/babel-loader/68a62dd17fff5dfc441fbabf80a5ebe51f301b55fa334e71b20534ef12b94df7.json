{"ast":null,"code":"var _jsxFileName = \"D:\\\\programm\\\\programm\\\\react_map_edu\\\\work_to_susu\\\\src\\\\Map1.js\";\nimport React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MapComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: 60.9394,\n      lng: 76.5731,\n      zoom: 13,\n      routeNumber: null,\n      routeData: [],\n      sidebarVisible: false,\n      // состояние видимости боковой панели\n      iconLoaded: false // состояние загрузки кастомной иконки маркера\n    };\n    this.toggleSidebar = () => {\n      this.setState(prevState => ({\n        sidebarVisible: !prevState.sidebarVisible\n      }));\n    };\n  }\n  componentDidMount() {\n    const customMarkerIcon = new Image();\n    customMarkerIcon.src = './customMarkerIcon.png';\n    customMarkerIcon.onload = () => {\n      this.setState({\n        iconLoaded: true\n      });\n    };\n  }\n  render() {\n    const center = [this.state.lat, this.state.lng];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sidebar ${this.state.sidebarVisible ? 'visible' : ''}`,\n        children: this.state.sidebarVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u042D\\u0442\\u043E \\u0431\\u043E\\u043A\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        zoom: this.state.zoom,\n        center: center,\n        zoomControl: false,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), this.state.iconLoaded && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [60.9394, 76.5731],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            minWidth: 200,\n            closeButton: false,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./customMarkerIcon.png\",\n              alt: \"Custom Marker\",\n              style: {\n                maxWidth: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sidebar-toggle-btn\",\n        onClick: this.toggleSidebar,\n        style: {\n          left: this.state.sidebarVisible ? '210px' : '10px'\n        } // Перемещаем кнопку в зависимости от состояния боковой панели\n        ,\n        children: this.state.sidebarVisible ? '<' : '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default MapComponent;","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","MapComponent","Component","constructor","args","state","lat","lng","zoom","routeNumber","routeData","sidebarVisible","iconLoaded","toggleSidebar","setState","prevState","componentDidMount","customMarkerIcon","Image","src","onload","render","center","className","children","fileName","_jsxFileName","lineNumber","columnNumber","zoomControl","attribution","url","position","minWidth","closeButton","alt","style","maxWidth","onClick","left"],"sources":["D:/programm/programm/react_map_edu/work_to_susu/src/Map1.js"],"sourcesContent":["import React from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport './Map.css';\r\n\r\nclass MapComponent extends React.Component {\r\n  state = {\r\n    lat: 60.9394,\r\n    lng: 76.5731,\r\n    zoom: 13,\r\n    routeNumber: null,\r\n    routeData: [],\r\n    sidebarVisible: false, // состояние видимости боковой панели\r\n    iconLoaded: false, // состояние загрузки кастомной иконки маркера\r\n  };\r\n\r\n  componentDidMount() {\r\n    const customMarkerIcon = new Image();\r\n    customMarkerIcon.src = './customMarkerIcon.png';\r\n    customMarkerIcon.onload = () => {\r\n      this.setState({ iconLoaded: true });\r\n    };\r\n  }\r\n\r\n  toggleSidebar = () => {\r\n    this.setState((prevState) => ({\r\n      sidebarVisible: !prevState.sidebarVisible,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const center = [this.state.lat, this.state.lng];\r\n\r\n    return (\r\n      <div className=\"map-container\">\r\n        {/* Боковая панель */}\r\n        <div className={`sidebar ${this.state.sidebarVisible ? 'visible' : ''}`}>\r\n          {/* Содержимое боковой панели */}\r\n          {this.state.sidebarVisible && (\r\n            <div>\r\n              {/* Содержимое боковой панели */}\r\n              <p>Это боковая панель</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Карта */}\r\n        <MapContainer zoom={this.state.zoom} center={center} zoomControl={false}>\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n\r\n          {/* Добавляем маркер с всплывающим окном (Popup) */}\r\n          {this.state.iconLoaded && (\r\n            <Marker position={[60.9394, 76.5731]}>\r\n              <Popup minWidth={200} closeButton={false}> {/* Устанавливаем минимальную ширину Popup */}\r\n                <img src='./customMarkerIcon.png' alt=\"Custom Marker\" style={{ maxWidth: \"100%\" }} /> {/* Вставляем вашу кастомную иконку */}\r\n              </Popup>\r\n            </Marker>\r\n          )}\r\n        </MapContainer>\r\n\r\n        {/* Кнопка для открытия/закрытия боковой панели */}\r\n        <button\r\n          className=\"sidebar-toggle-btn\"\r\n          onClick={this.toggleSidebar}\r\n          style={{ left: this.state.sidebarVisible ? '210px' : '10px' }} // Перемещаем кнопку в зависимости от состояния боковой панели\r\n        >\r\n          {this.state.sidebarVisible ? '<' : '>'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}